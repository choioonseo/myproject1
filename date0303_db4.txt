-- 2.
​
SELECT * FROM PRODUCT ORDER BY price DESC
​
-- 3.
​
SELECT NAME, CONTENT, PRICE, COMPANY FROM PRODUCT ORDER BY COMPANY 

---4.

SELECT DISTINCT COMPANY FROM PRODUCT3

--5.

SELECT PRICE * 5 AS PRICE5 FROM PRODUCT3 --AS PRICE: PRIEC*5의 이름을 바꿈

--6. 

SELECT NAME, COMPANY FROM PRODUCT3 WHERE PRICE=5000

--7.

SELECT PRICE, COMPANY FROM PRODUCT3 WHERE PRICE BETWEEN 3000 AND 6000 

--8.

SELECT NAME, COMPANY FROM PRODUCT3 WHERE COMPANY !='C100'

--9.

SELECT NAME, PRICE FROM PRODUCT3 WHERE COMPANY='C100' OR COMPANY='C200'

--10. 조건검색(문자열에 4를 포함)

SELECT * FROM PRODUCT3 WHERE NAME LIKE '%4'

--11. 조건 검색

SELECT * PRODUCT3 WHERE NAME LIKE '%FOOD%'

--12.UPDATE(값이 5000인 것을 품절로 바꾸어라)

UPDATE PRODUCT3 SET CONTENT = '품절' WHERE PRICE=5000

--품절로 바뀌었는지 테이블 확인

SELECT * FROM PRODUCT3 WHERE PRICE=5000

--13.

UPDATE PRODUCT3 SET IMG='0.PNG', PRICE=10000 WHERE ID='100' OR ID='102'

SELECT * FROM PRODUCT3

--14.
--DELETE는 컬럼명을 지정하지 않음
--INSERT, DELETE, UPDATE의 결과는 실행된 ROW수(정수)
--SELECT의 결과는 테이블이다

DELETE FROM PRODUCT3 WHERE COMPANY='c100'

SELECT * FROM PRODUCT3 WHERE COMPANY = 'c100'

--15. DELETE
--VARCHAR2와 CHAR의 차이
--VARCHAR2: VAR(변하다, VARIABLE) + CHAR(문자)
--저장공간이 변함, 2글자이면 2만큼 저장공간 사용, 100글자이면 100만큼 저장공간 사용
--CHAR(100): 저장공간이 고정, 주민번호, 전화번호, 우편번호, 사번

DELETE FROM PRODUCT --ROW수
--저장공간은 남겨두고 데이터만 지움, 원래의 자리는 그대로 있끼 때문에 데이터를 복구/취소(=ROLLBACK) 가능
--TRINCATE로 지우면 저장공간도 남겨두지 않고, 복구/취소 불가능

SELECT * FROM PRODUCT --저장공간은 남겨두고, 데이터만 지움


-- ----------------------------------------
-- --------문자함수------------------

--UPPER

SELECT UPPER(ENAME) FROM EMP

--LENGTH

SELECT LENGTH(ENAME) FROM EMP

--공백을 제거하여 LENGTH값 구하기

SELECT LENGTH(TRIM(ENAME)) FROM EMP

--SUBSTR 
SELECT SUBSTR(ENAME, 2) FROM EMP

SELECT SUBSTR(ENAME, -2) FROM EMP

--REPLACE

SELECT REPLACE(ENAME, 'L', 'N') FROM EMP

--LPAD, RPAD(빈공간을 다른 문자로 대체)

SELECT LPAD(ENAME, 6, '#') FROM EMP

--CONCAT(문자열을 결합)

SELECT CONCAT(EMPNO, ENAME) FROM EMP

--TRIM/ LTRIM/ RTRIM(특정문자나 공백 삭제)

SELECT TRIM('S' FROM ENAME) FROM EMP

--날짜 +1: 내일, 날짜-1: 어제
SELECT SYSDATE AS NOW, SYSDATE-1 AS YESTERDAY, 
SYSDATE+1 AS TOMORROW FROM DUAL

--NULL인 곳에 0값을 넣음

UPDATE EMP SET COMM=0 WHERE COMM IS NULL

SELECT * FROM EMP

SELECT SAL + COMM AS TOTAL FROM EMP

------------------------------------
--------문자함수, 숫자함수 정리문제-----------

--1. ENAME 글자수 검색

SELECT LENGTH(ENAME) FROM EMP

--2.

SELECT LENGTH(ENAME) FROM EMP WHERE JOB='MANAGER'

--3.

SELECT ENAME, JOB FROM EMP WHERE COMM IS NULL

--4.

SELECT HIREDATE FROM EMP WHERE COMM IS NOT NULL

--5.

SELECT SUBSTR(ENAME, 2) FROM EMP

--6.

SELECT SUBSTR(ENAME, 1,3) FROM EMP

--7.

SELECT REPLACE(ENAME, 'K', 'P')FROM EMP


--------------------------------------
---------집계함수----------------------

SELECT COUNT(*) FROM EMP

SELECT COUNT(*) FROM EMP

SELECT COUNT (SAL) FROM EMP

SELECT COUNT (SAL), SUM(SAL), ROUND(AVG(SAL)),MIN(SAL), MAX(SAL) 
FROM EMP WHERE JOB='SALESMAN'

SELECT COUNT (SAL), SUM(SAL), AVG(SAL),MIN(SAL), MAX(SAL) 
FROM EMP GROUP BY JOB

SELECT COUNT (SAL), SUM(SAL), AVG(SAL),MIN(SAL), MAX(SAL) 
FROM EMP GROUP BY JOB ORDER BY JOB DESC


SELECT COUNT (SAL), SUM(SAL), AVG(SAL),MIN(SAL), MAX(SAL) 
FROM EMP GROUP BY JOB
HAVING COUNT(SAL)>=4 --HAVING: 그룹을 지어서 검색 후 필터링을 하고자 하는 경우
ORDER BY JOB DESC --모든 검색이 끝난 후, 그 결과를 정렬하고자하는 경우(맨 끝에 사용)

-----------------------------------
-------집계함수 정리문제-----------------

SELECT * FROM EMP

--1. 

SELECT COUNT(ENAME) FROM EMP

--2. 

SELECT COUNT(ENAME) FROM EMP WHERE DEPTNO=20 OR MGR<=7700

--3. 

SELECT SAL FROM EMP WHERE DEPTNO=10 OR DEPTNO=20

--4.

SELECT MIN(SAL), MAX(SAL), ROUND(AVG(SAL)) FROM EMP

--5.
SELECT DEPTNO, AVG(SAL) FROM EMP GROUP BY DEPTNO

--6. 

SELECT DEPTNO, SUM(SAL) FROM EMP GROUP BY DEPTNO
HAVING AVG(SAL)>=2000 ORDER BY DEPTNO 

--8. 

SELECT COUNT(*), AVG(SAL) FROM EMP WHERE JOB='MANAGER'

--9.

SELECT COUNT(*), AVG(SAL) FROM EMP WHERE ENAME LIKE '%S%'

--10. 

SELECT COUNT(*) FROM EMP WHERE SAL>=3000 AND COMM IS NOT NULL
ORDER BY SAL DESC


------------------------------------
---------조인-------------------------

-- member테이블 만들기

CREATE TABLE "HR"."MEMBER" 
   (	"ID" VARCHAR2(10), 
	"PW" VARCHAR2(10), 
	"NAME" VARCHAR2(10), 
	"TEL" VARCHAR2(10), 
	 CONSTRAINT "MEMBER_PK" PRIMARY KEY ("ID"))

--join을 하는 이유: 검색을 하고 싶은데 항목들이 여러개의 테이블에 흩어져 있는 경우
	 			테이릅을 모아서(합해서) 검색을 하고 싶을 때
	 			
--두 개의 테이블의 공통된 값들만 조인해서 검색
	 			
SELECT * FROM "MEMBER" M, BBS B
WHERE M.ID = B.WRITER

SELECT B."no", B.TITLE, NAME FROM "MEMBER" M, BBS B
WHERE M.ID = B.WRITER

-------INNER JOIN: 테이블간 공통값만 추출

SELECT * FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO

SELECT E.EMPNO, E.ENAME, E.JOB, D.DEPTNO, D.LOC 
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO

-- LEFT JOIN

SELECT *
FROM "MEMBER" M
LEFT OUTER JOIN BBS B
ON (M.ID=B.WRITER)

-- RIGHT JOIN

SELECT *
FROM "MEMBER" M
RIGHT OUTER JOIN BBS B
ON (M.ID=B.WRITER)

-----------JOIN 확인문제--------
--1.EMP테이블 정보 다 보이게 함, DEPT는 맞는 것만 오른쪽에 붙이고 싶음
--먼저 쓴 테이블이 무조건 오른쪽, 나중에 쓴 테이블이 왼쪽

SELECT * 
FROM EMP E
LEFT OUTER JOIN DEPT D
ON (E.DEPTNO = D.DEPTNO)

--2.DEPT테이블의 정보는 다 보이게 함, EMP는 맞는 것만 오른쪽에 붙임
--먼저 쓴 테이블이 무조건 오른쪽, 나중에 쓴 테이블이 왼쪽

SELECT * 
FROM DEPT D
RIGHT OUTER JOIN EMP E
ON (E.DEPTNO = D.DEPTNO)


------------------------------------

SELECT * FROM MEMBER M, BBS B
WHERE M.ID=B.WRITER

SELECT * 
FROM MEMBER M
LEFT OUTER JOIN BBS B
ON (M.ID=B.WRITER)

SELECT * 
FROM MEMBER M
RIGHT OUTER JOIN BBS B
ON (M.ID=B.WRITER)

------------------------------------

CREATE TABLE COMPANY (
	ID VARCHAR2(200)PRIMARY KEY,
	NAME VARCHAR2(200),
	ADDR VARCHAR2(200),
	TEL VARCHAR2(200)
)

INSERT INTO COMPANY VALUES('c100', 'good','seoul','011')

INSERT INTO COMPANY VALUES('c200', 'joa','busan','012')

INSERT INTO COMPANY VALUES('c300', 'maria','ulsan','013')

INSERT INTO COMPANY VALUES('c400', 'my','kwangju','014')

SELECT * FROM COMPANY



CREATE TABLE "HR"."PRODUCT" 
   (	"ID" VARCHAR2(200), 
	"NAME" VARCHAR2(200), 
	"CONTENT" VARCHAR2(200), 
	"PRICE" NUMBER(38,0), 
	"COMPANY" VARCHAR2(200), 
	"IMG" VARCHAR2(200)
	)
	
